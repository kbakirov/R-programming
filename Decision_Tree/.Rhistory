mean = mean(deaths),
sd = sd(deaths),
min = min(deaths),
Q1 = quantile(deaths, 0.25),
median = median(deaths),
Q3 = quantile(deaths, 0.75),
max = max(deaths)
)
freq_abs <- with(subset(hur1, gender == "Female"), table(deaths <= 24))
freq_abs
prop.table(freq_abs)
sort(subset(hur1, gender == "Female")$deaths)
sort(subset(hur1, gender == "Male")$deaths)
ggplot(hur1, aes(x = deaths)) +
stat_ecdf() +
facet_grid(~ gender)
ggplot(hur1, aes(x = year, y = deaths, color = gender)) +
geom_point() +
scale_color_colorblind()
hur_raw <- read_csv('hurricanes.csv',
col_types = 'cdcd')
hur_raw
hur <- rename(hur_raw, name = Hurricane,
year = Year,
gender = `Gender of Name`,
deaths = `Number of Deaths`)
hur
summary(hur)
unique(hur$gender)
unique(hur$name)
unique(hur$deaths)
unique(hur$gender)
summary(hur)
hist(hur$deaths)
boxplot(year ~ gender, data = hur)
boxplot(deaths ~ gender, data = hur)
arrange(hur, desc(deaths))
arrange(hur, desc(deaths))
group_by(gender) %>%
arrange(hur, desc(deaths))
group_by(gender)
arrange(hur, desc(deaths))
group_by(deaths)
arrange(hur, desc(deaths))
filter(hur1, year >= 1978) %>%
ggplot(aes(x = year, y = deaths, color = gender)) +
geom_point() +
scale_color_colorblind()
filter(hur1, year >= 1978) %>%
group_by(gender) %>%
summarise(
n = n(),
mean = mean(deaths),
sd = sd(deaths),
min = min(deaths),
Q1 = quantile(deaths, 0.25),
median = median(deaths),
Q3 = quantile(deaths, 0.75),
max = max(deaths)
)
getwd()
## some utilities for functional programming and plotting
library(tidyverse)
## our initial basket
EGGS <- c(rep(0, 8), rep(1, 4))
## total number of replicates
NUM_REPLICATES <- 50000
## for reproducibility
RNG_SEED <- 1234
install.packages("tidyverse")
num_raw_eggs_guest <- function(game) {
if(length(game) == 0) {
return(0)
} else {
return(sum(game[seq(1, length(game), by = 2)]))
}
}
num_raw_eggs_host <- function(game) {
if(length(game) < 2) {
return(0)
} else {
return(sum(game[seq(2, length(game), by = 2)]))
}
}
game_over <- function(game) {
max(num_raw_eggs_guest(game), num_raw_eggs_host(game)) == 2
}
rgame <- function() {
eggs <- EGGS
game <- vector('numeric', length = 0)
while(!game_over(game)) {
i <- sample.int(length(eggs), size = 1)
game <- append(game, eggs[i])
eggs <- eggs[-i]
}
game
}
View(game_over)
View(game_over)
View(game_over)
rgame()
set.seed(RNG_SEED)
games <- replicate(NUM_REPLICATES, rgame(), simplify = FALSE)
length(games)
str(games[1:10])
4/12
unlucky_first <- map_dbl(games, 1)
mean(unlucky_first)
unlucky_first <- map_dbl(games, 1)
mean(unlucky_first)
X <- map_dbl(games, num_raw_eggs_guest)
Y <- map_dbl(games, num_raw_eggs_host)
Z <- map_dbl(games, length)
prop.table(table(X))
prop.table(table(Y))
prop.table(table(Z))
prop.table(table(X, Y))
prop.table(table(Y, Z))
prop.table(table(X, Y, Z))
3/10
install.packages("dashboard")
dashboardPage(
dashboardHeader(),
dashboardSidebar(),
dashboardBody(),
)
install.packages("dashboard")
dashboardPage(header, sidebar, body)
dashboardPage(
dashboardHeader(),
dashboardSidebar(),
dashboardBody()
)
header = dashboardHeader(title = "Movies explorer")
source('~/test/app.R', echo=TRUE)
install.packages("shinydashboard")
source('~/test/app.R', echo=TRUE)
View(header)
View(header)
sidebar = dashboardSidebar(
sliderInput("year", "Year", min = 1893, max = 2005,
value = c(1945, 2005), sep = ""),
textInput("title", "Title"),
selectInput("genre", "Which genre?",
c("Action", "Animation", "Comedy", "Drama",
"Documentary", "Romance", "Short")),
sidebarMenu(
menuItem("Graph", tabName = "graph"),
menuItem("Table", tabName = "table")
)
)
source('~/test/app.R', echo=TRUE)
source('~/test/app.R', echo=TRUE)
dashboardPage(header, sidebar, body)
source('~/ew/app.R', echo=TRUE)
dir()
getwd()
setwd()
getwd()
setwd(C:\Users\Kuanysh\Desktop\FSML_DATA)
setwd(C:/Users/Kuanysh/Desktop/FSML_DATA)
dir
dir()
getwd()
data1 <- read.table("C:/Users/Kuanysh/Desktop/FSML_DATA/data1.txt", quote="\"", comment.char="")
View(data1)
table(A)
table()
table(data(1))
table(data1)
sum(table(data1))
mean(as.matrix(data1))/10
B=read.table(C:\Users\Kuanysh\Desktop\FSML_DATA\data2.txt)
data2 <- read.table("C:/Users/Kuanysh/Desktop/FSML_DATA/data2.txt", quote="\"", comment.char="")
View(data2)
View(data2)
table(data2)
sum(table(data2))
B = data2
sum(table(B))
v=var(B)*999/1000
v
m=mean(as.matrix(B))
m
1-v/m
phat=1-v/m
nhat=m/phat
nhat
nhat=11
phat=m/nhat
phat
t = seq(-10,10,0.05)
y1= dt(t,1)
y5=dt(t,5)
y10 = dt(t,10)
y50 = dt(t,50)
ym = max(y1,y5,y10,y50)
plot
plot(t,y1,xlim =c(-10,10), ylim=c(0,ym), type ='l',col='red')
plot(t,y1,xlim =c(-10,10), ylim=c(0,ym), type ='l',col='green')
plot(t,y5,xlim =c(-10,10), ylim=c(0,ym), type ='l',col='green')
par(new=TRUE)
plot(t,y5,xlim =c(-10,10), ylim=c(0,ym), type ='l',col='green')
plot(t,y1,xlim =c(-10,10), ylim=c(0,ym), type ='l',col='red')
pnorm(0.51, mean=0, sd=1, lower.tail=FALSE)
pnorm(0.51, mean=0, sd=1, lower.tail=TRUE)
pnorm(0.28, mean=0, sd=1, lower.tail=FALSE)
pnorm(0.28, mean=0, sd=1, lower.tail=TRUE)
x <-- pnorm(0.28, mean=0, sd=1, lower.tail=TRUE)
plot(x)
plot(x,y)
hist(y)
hist(x)
pnorm(2.4, mean=2, sd=25, lower.tail=TRUE)
pnorm(0.51, mean=0, sd=1, lower.tail=TRUE)
pnorm(2,4 mean=2, sd=5, lower.tail=TRUE)
pnorm(2.4, mean=2, sd=5, lower.tail=TRUE)
pnorm(2.4, mean=2, var=25, lower.tail=TRUE)
pnorm(2.4, mean=2, variance=25, lower.tail=TRUE)
pnorm(2.4, mean=2, sd=5, lower.tail=TRUE)
pnorm(1.8, mean=2, sd=5, upper.tail=TRUE)
pnorm(1.8, mean=2, sd=5, lower.tail=FALSE)
pnorm(1.7<x<2.1, mean=2, sd=5, lower.tail=FALSE)
pnorm(x, 1.7, 2.1, mean=2, sd=5, lower.tail=FALSE)
pnorm(1.7e2.1, mean=2, sd=5, lower.tail=FALSE)
pnorm[(between(x, 1.7, 2.1), mean=2, sd=5, lower.tail=FALSE)]
pnorm[(between(x, 1.7, 2.1) mean=2, sd=5, lower.tail=FALSE)]
pnorm(2.1, mean=2, sd=5, lower.tail=TRUE)-pnorm(1.7, mean=2, sd=5, lower.tail = TRUE)
pnorm(2.1, mean=2, sd=25, lower.tail=TRUE)-pnorm(1.7, mean=2, sd=25, lower.tail = TRUE)
pnorm(1.8, mean=2, sd=25, lower.tail=FALSE)
pnorm(2.4, mean=2, sd=25, lower.tail=TRUE)
pnorm(x, mean=2, sd=25, lower.tail=TRUE)=0.9
qnorm(x, mean=2, sd=25, lower.tail = TRUE)
qnorm(0.9, mean=2, sd=25, lower.tail = TRUE)
help(qnorm)
qnorm(0.9, mean=0, sd=1, lower.tail = TRUE)
qnorm(0.999999999999999999, mean=0, sd=1, lower.tail = TRUE)
qnorm(0.999, mean=0, sd=1, lower.tail = TRUE)
qnorm(0.999999, mean=0, sd=1, lower.tail = TRUE)
qnorm(0.9, mean=2, sd=25, lower.tail = TRUE)
qnorm(0.9, mean=2, sd=25, lower.tail = FALSE)
qnorm(0.9, mean=2, sd=25, lower.tail = TRUE)
qnorm(0.95, mean=2, sd=25)
qnorm(0.95, mean=2, sd=25, lower.tail = TRUE)
qnorm(0.95, mean=2, sd=25, lower.tail = FALSE)
pt(0.259, df=12, lower.tail=TRUE )
pt(1.083, df=12, lower.tail=FALSE )
pt(-2.179, df=12, lower.tail=FALSE )
qt(0.7, df=12)
qt(0.7, df=12, lower.tail = FALSE)
qt(0.2, df=12, lower.tail = TRUE)
qt(0.9, df=12, lower.tail = TRUE)
pnorm(0.51, mean = 0, sd = 1, lower.tail = TRUE)
pnorm(0.5, mean = 0, sd = 1, lower.tail = TRUE)
pnorm(2.4, mean = 0, sd = 1, lower.tail = TRUE)
mu =2
sig2 = 1.7
n=500
A = rnorm(n, mu, sqrt(sig2))
lowerbound = mean(A)-sqrt(Var(A))/sqrt(n)*qt(1-alpha/2,n-1)
lowerbound = mean(A)-sqrt(var(A))/sqrt(n)*qt(1-alpha/2,n-1)
visua<-function(k,n,mu,sig2)
{
M=matrix(data=0, ncol=2, nrow=k)
for (i in 1:k){
A= rnorm(n, mu, sqrt,(sig2))
lowerbound = mean(A)-sqrt(var(A))/sqrt(n)*qt(1-alpha/2,n-1)
upperbound = mean(A)+sqrt(var(A))/sqrt(n)*qt(1-alpha/2,n-1)
M[i,1] = lowerbound
M[i,2] = upperbound
}
visua = M
}
Z = visua(50,500,2,1.7)
Z = visua(50,500,2,1.7)
Live Demo
.libPaths()
.libPaths()
library()
print(ls())
a <- "Hello Kuanysh"
cat(a)
print(a)
b = "Hello Kuanysh"
print b
print(b)
cat(b)
print(ls())
rm(list = ls())
print(ls)
print(ls())
a <- c(2, 3.5, 4)
b <- c(2, 3.5, 4)
print(a+b)
c -> (2, 3.5, 4)
c -> c(2, 3.5, 4)
c <- (2, 3.5, 4)
c <- c(2, 3.5, 4)
print(a+b+c)
rm(list = ls())
print(ls())
print(mean(1:100))
print(median(1:100))
print(mean(1:1000))
print(mean(100:1000))
new_function <- function(a){}
rm(new_function(a))
rm(list = ls())
new_function(3)
new_function(3)
source('~/.active-rstudio-document', echo=TRUE)
new_function(3)
new_function(3)
new_function(3)
new_function(3)
source('~/.active-rstudio-document', echo=TRUE)
new_function(3)
new_function(4)
a <- ("hello world")
rm(list = ls())
print(ls())
list1 <- list(1,2,3)
print(list1)
M <- matrix(c(1:6), nrow = 2, byrow = TRUE)
print(M)
M <- matrix(c(1:6), nrow = 3, byrow = TRUE)
print(M)
M <- matrix(c(1:6), nrow = 3, byrow = FALSE)
print(M)
source('~/.active-rstudio-document', echo=TRUE)
emp.data <- data.frame(
emp.id <- c(1,2,3),
emp.name <- c("Bakirov", "Kuanysh", "Amanbekuly"),
)
emp.data <- data.frame(
emp.id <- c(1,2,3),
emp.name <- c("Bakirov", "Kuanysh", "Amanbekuly")
)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
print(emp.data)
source('~/.active-rstudio-document', echo=TRUE)
print(emp.data)
emp.data <- data.frame(
emp.id <- c(1,2,3),
emp.name <- c("Bakirov", "Kuanysh", "Amanbekuly"))
print(emp.data)
rm(list = ls())
print(ls)
print(ls())
source('~/.active-rstudio-document', echo=TRUE)
print(emp.data)
str(emp.data)
print(summary(emp.data))
result <- data.frame(emp.data$emp_name)
print(result)
emp.data$dept <- c("sas", "sda", "sdsds")
emp.data$dept <- c("sas", "sda", "sdsds", "","")
v <- emp.data
print(v)
source('~/.active-rstudio-document', echo=TRUE)
newres <- rbind(emp.data, emp.data2)
emp.finadata <- rbind(emp.data, emp.data2)
source('~/.active-rstudio-document', echo=TRUE)
emp.finalres <- rbind(emp.data, emp.data2)
source('~/.active-rstudio-document', echo=TRUE)
emp.finalres <- rbind(emp.data, emp.data2)
print(emp.finalres)
rm(list = ls())
ls()
help(input)
help(??input)
help(raw)
help(user)
help(readline)
source('~/.active-rstudio-document', echo=TRUE)
print(a)
print(b)
help(version)
R.version()
R.Version()
help(memory)
help("memory.size")
memory.size(max = FALSE)
print(R.version.string)
print(paste("My name is:", a, "and I am", b, "years old"))
print(paste("My name is", a, "and I am", b, "years old"))
rm(list = ls())
clear
help(clear)
hepl(console)
help(console)
seq <- c(20:50)
mn <- mean(c(20:60))
sm <- sum(c(51:91))
rm(list = ls())
help("vector")
a <- vector(mode = "logical", length = (-50:50))
v <- sample(-50:50, 10, replace = TRUE)
help(fibonacci)
rm(list = ls())
source('~/.active-rstudio-document', echo=TRUE)
rm(list = ls())
source('~/.active-rstudio-document', echo=TRUE)
rm(list = ls())
clc()
hundred <- c(1:100)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
''
rm(list = ls())
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
install.packages(glmnet)
"glmnet"
library(glmnet)
install.packages("glmnet")
library(glmnet)
help(glmnet)
x = matrix(rnorm(100 * 20), 100, 20)
y = rnorm(100)
fit1 = glmnet(x, y, alpha = 0)
plot(fit1)
x = matrix(rnorm(100*10), ncol = 10)
fit1 = glmnet(x,y, alpha = 0)
plot(fit1)
fit2 = glmnet(x,y, alpha = 1)
plot(fit2)
for(i in a
install.packages("githubinstall")
library("ggplot2", lib.loc="~/R/win-library/3.6")
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
git
library(ggplot2)
library(knitr)
library(nycflights13)
install.packages("nycflights13")
library(nycflights13)
library(dplyr)
install.packages("dplyr")
library(nycflights13)
library(dplyr)
library(knitr)
flights
View(flights)
glimpse(flights)
airlines
kable(airlines)
airlines$name
alaska_flights <- flights %>%
filter(carrier == "AS")
flights
view(flights)
library(nycflights13)
library(dplyr)
library(knitr)
flights
View(flights)
glimpse(flights)
airlines
kable(airlines)
airlines$name
summary(flights)
library(rpart)
Tree1
Tree1
Tree1
Tree1
print(Tree1)
Tree1
Tree1
Tree1
Tree1
Tree1=rpart(iris$Species~.,data=iris[,-5])
Tree1
par(xpd = NA, mar = rep(0.7, 4))
plot(model, compress = TRUE)
plot(Tree1, compress = TRUE)
text(Tree1, cex = 0.7, use.n = TRUE, fancy = FALSE, all = TRUE)
data("mtcars")
names(mtcars)
Treer=rpart(mtcars$mpg~.,data=mtcars[,-1])
Treer
plot(Treer, compress = TRUE)
text(Treer, cex = 0.7, use.n = TRUE, fancy = FALSE, all = TRUE)
Treer=rpart(mtcars$mpg~.,data=mtcars[,-1],control = rpart.control(cp=10^-9,minsplit = 2))
Treer
plot(Treer, compress = TRUE)
text(Treer, cex = 0.7, use.n = TRUE, fancy = FALSE, all = TRUE)
summary(iris)
print(iris)
summary(flights)
library(nycflights13)
summary(flights)
library(rpart)
print(getwd())
ls()
setwd("C:\Users\Kuanysh\Documents\GitHub\R-programming\Decision_Tree")
setwd("C:/Users/Kuanysh/Documents/GitHub/R-programming/Decision_Tree")
setwd("C:/Users/Kuanysh/Documents/GitHub/R-programming/Decision_Tree/StudentData")
setwd("C:/Users/Kuanysh/Documents/GitHub/R-programming/Decision_Tree")
data = read.csv("StudentData")
data <- read.csv("StudentData.csv")
print(data)
summary(data)
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
ggplot(data = data) +
geom_point(mapping = aes(x=Study_Time, y= GPA, color = Designation))
